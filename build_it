#!/usr/bin/env bash
build_dir="build"

build() {
  debug=""
  build_dir=$2
  if [[ ! -z "$1" && ("$1" == "Debug" || "$1" == "debug") ]]; then
    debug=" -DCMAKE_BUILD_TYPE=Debug"
  elif [[ ! -z "$1" && -z "$2" ]]; then
    build_dir=$1
  fi
  
  cmake -S . -B $build_dir$debug && cmake --build $build_dir
}

clear_build() {
  [ ! -z "$1" ] && build_dir="$1"
  rm -rf $build_dir/*
}


main() {
  flags=()
  args=()

  for arg in "$@"; do
      if [[ "$arg" == --* || "$arg" == -* ]]; then
          flags+=("$arg")
      else
          args+=("$arg")
      fi
  done

  [ ! -z "${args[0]}" ] && build_dir="${args[0]}"

  if [[ " ${flags[@]} " =~ " --Clear "
        || " ${flags[@]} " =~ " --clear "
        || " ${flags[@]} " =~ " -C " ]];
  then
    printf "\033[01;36mCleaning Build...\033[05m\n"
    clear_build $build_dir
  fi

  if [[ " ${flags[@]} " =~ " --Debug "
          || " ${flags[@]} " =~ " --debug "
          || " ${flags[@]} " =~ " -D " ]];
  then
    printf "\033[01;36mBuilding Debug Version...\033[m\n"
    build debug $build_dir
    return 0;
    # build debug ${args[0]}
  fi
  
  printf "\033[01;36mBuilding Release Version...\033[m\n"
  build $build_dir
  return 0
}

main $1 $2